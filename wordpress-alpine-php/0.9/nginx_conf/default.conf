
upstream php {
        server unix:/var/run/php/php-fpm.sock;        
        #server 127.0.0.1:9000;
}

server {
        listen 80 default_server;
        ## Your website name goes here.
		listen [::]:80 default_server;
        server_name _;
        ## Your only path reference.
        root /home/site/wwwroot;
        ## This should be in your http block and if it is, it's not needed here.
		##sendfile  off;
		error_log stderr debug;
        index index.php;
		set_real_ip_from 172.16.0.0/16; #Do not modify this mask
        real_ip_header X-Client-IP;


        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }
		
		if ($http_x_arr_ssl = "") {
        return 301 https://$host$request_uri;
		}

		  #location / {
			  #try_files $uri$args $uri$args/ /index.html;
		    #}
		
		location = /index.html {
			if ($http_x_debug) {
			  add_header X-debug-request "$request";
			  add_header X-debug-host "$host";
			  add_header X-debug-args "$args";
			  add_header X-debug-uri "$uri";
			  add_header X-debug-301 "https://$host$request_uri";
			  add_header X-debug-arr-ssl "$http_x_arr_ssl";
			  add_header X-debug-port "$remote_port";
			  add_header X-debug-scheme "$scheme";      
			}
		# no try_files here
	  }
		

  # Add locations of phpmyadmin here.

  # Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
  sendfile off;

  set $skip_cache 0;

  # POST requests and urls with a query string should always go to PHP
  if ($request_method = POST) {
    set $skip_cache 1;
  }
  if ($query_string != "") {
    set $skip_cache 1;
  }

  # Don't cache uris containing the following segments
  if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
    set $skip_cache 1;
  }

  # Don't use the cache for logged in users or recent commenters
  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
    set $skip_cache 1;
  }

  # Don't cache WooCommerce URLs
  # Cart widgets are still a problem: https://github.com/emcniece/docker-wordpress/issues/3
  if ($request_uri ~* "/(cart|checkout|my-account)/*$") {
    set $skip_cache 1;
  }


location ~ /wp-admin/admin-ajax\.php$ {
    allow all;
    
    location ~ \.php$ {
						
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi.conf;
                fastcgi_intercept_errors on;
                fastcgi_pass php;

				fastcgi_read_timeout 300;
				fastcgi_cache_bypass $skip_cache;
				fastcgi_no_cache $skip_cache;
				fastcgi_cache WORDPRESS;
				fastcgi_cache_valid 200 301 302 60m;     
				fastcgi_cache_min_uses 1;
				fastcgi_cache_lock on;				
        }
  }
 #52.142.168.99;
  
   #location ~ /(wp-login|wp-admin|xmlrpc/) {
	location ~ ^/(wp-admin|wp-login\.php|xmlrpc\.php) {   
    allow 52.142.168.99; # ngx azure test vm
  	allow 196.29.44.0/22; #NGX CIDR
    #allow 6.6.6.6; # Home Office
     deny all;
	
	 location ~ \.php$ {
						
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi.conf;
                fastcgi_intercept_errors on;
                fastcgi_pass php;

				fastcgi_read_timeout 300;
				fastcgi_cache_bypass $skip_cache;
				fastcgi_no_cache $skip_cache;
				fastcgi_cache WORDPRESS;
				fastcgi_cache_valid 200 301 302 60m;     
				fastcgi_cache_min_uses 1;
				fastcgi_cache_lock on;				
        }
  
  }

  location ~ ^/(\.git/?.*) {
  return 404;
}

  


         location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                 try_files $uri $uri/ /index.php?$args;
         }

        location ~ \.php$ {		
	           #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi.conf;
                fastcgi_intercept_errors on;
                fastcgi_pass php;

				fastcgi_read_timeout 300;
				fastcgi_cache_bypass $skip_cache;
				fastcgi_no_cache $skip_cache;
				fastcgi_cache WORDPRESS;
				fastcgi_cache_valid 200 301 302 60m;     
				fastcgi_cache_min_uses 1;
				fastcgi_cache_lock on;				
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
				add_header Pragma public;
				add_header Cache-Control "public";
                log_not_found off;
        }
}